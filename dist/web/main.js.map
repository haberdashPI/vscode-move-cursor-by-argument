{"version":3,"file":"main.js","mappings":"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","sources":["../.././src/extension.ts","../../external commonjs \"vscode\"","../../webpack/bootstrap","../../webpack/before-startup","../../webpack/startup","../../webpack/after-startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { Range, Position } from 'vscode';\n\ninterface IHash<T> {\n    [details: string] : T;\n}\ninterface BracketPair{\n    start: RegExp,\n    stop: RegExp,\n}\nlet languageBrackets: IHash<BracketPair> = {};\n\nfunction findBrackets(){\n    // TODO: compute brackets based on the language configuration\n    languageBrackets[\"default\"] = {start: /(\\(|\\{|\\[)/, stop: /(\\]|\\}|\\))/ };\n}\nfunction bracketsFor(doc: vscode.TextDocument,dir: Direction){\n    if(dir === Direction.Forward){\n        return RegExp(languageBrackets[\"default\"].start,\"g\");\n    }else{\n        return RegExp(languageBrackets[\"default\"].stop,\"g\");\n    }\n}\n\ninterface MoveByArgs{\n    value?: number,\n    select?: boolean\n    boundary?: string,\n    selectWhole?: boolean,\n}\n\nenum Direction{\n    Forward,\n    Backward\n}\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n    findBrackets();\n    vscode.workspace.onDidChangeConfiguration(findBrackets);\n\n\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    console.log('Congratulations, your extension \"move-cursor-by-argument\" is now active!');\n\n    // The command has been defined in the package.json file\n    // Now provide the implementation of the command with registerCommand\n    // The commandId parameter must match the command field in package.json\n    let disposable = vscode.commands.registerCommand('move-cursor-by-argument.move-by-argument',\n        (args: MoveByArgs) => {\n            let editor = vscode.window.activeTextEditor;\n            if(editor){\n                moveByArgument(editor,args);\n                editor.revealRange(editor.selection);\n            }\n        });\n\n    context.subscriptions.push(disposable);\n}\n\nasync function findSurroundingBracketRange(editor: vscode.TextEditor,\n    pos: vscode.Position){\n\n    // if we're right after a bracket, this will\n    // select that inner range, rather than the outer range\n    // we need to shift the cursor first, in this case,\n    let endbracket = bracketsFor(editor.document,Direction.Backward);\n    let charbefore =\n        editor.document.getText(new Range(pos.translate(0,-1),pos));\n    let range: vscode.Range;\n    if(endbracket.test(charbefore)){\n        let next = pos.translate(0,1);\n        editor.selection = new vscode.Selection(next,next);\n        await vscode.commands.executeCommand('editor.action.selectToBracket');\n        range = new vscode.Range(editor.selection.start,\n            editor.selection.end.translate(0,-1));\n    }else{\n        await vscode.commands.executeCommand('editor.action.selectToBracket');\n        range = new vscode.Range(editor.selection.start.translate(0,1),\n            editor.selection.end.translate(0,-1));\n    }\n\n    return range;\n}\n\nfunction textLineFrom(editor: vscode.TextEditor, pos: vscode.Position,\n    range: vscode.Range){\n\n    let end = editor.document.lineAt(pos).range.end;\n    if(end.isAfter(range.end)){ end = range.end; }\n    return editor.document.getText(new Range(pos,end));\n}\n\nfunction isBefore(a: number | undefined, b: number | undefined){\n    if(a === undefined){\n        return false;\n    }else{\n        return b === undefined || a < b;\n    }\n}\n\nfunction nonZeroIndex(m: RegExpExecArray | null){\n    return m !== null && m.index !== undefined && m.index > 0;\n}\n\nfunction clean(match: RegExpExecArray | null){\n    if(match === null || match.index === undefined){\n        return undefined;\n    }else{\n        return match.index;\n    }\n}\n\nenum Token{\n    Separator,\n    Bracket\n}\n\nasync function findMatchingBracket(editor: vscode.TextEditor, pos: vscode.Position){\n    editor.selection = new vscode.Selection(pos,pos);\n    await vscode.commands.executeCommand('editor.action.jumpToBracket');\n    return editor.selection.active;\n}\n\nfunction separatorsAndBrackets(document: vscode.TextDocument, range: vscode.Range, dir: Direction){\n    let tokens = _separatorsAndBrackets(document, range, dir);\n\n    if(dir === Direction.Forward){\n        return tokens;\n    }else{\n        return Array.from(tokens).reverse();\n    }\n}\nfunction* _separatorsAndBrackets(document: vscode.TextDocument, range: vscode.Range, dir: Direction){\n    let brackets = bracketsFor(document,dir);\n    let separator = /(,|;)/g;\n\n    let text = document.getText(range);\n    let bindex = clean(brackets.exec(text));\n    let sindex = clean(separator.exec(text));\n    while(true){\n        if(sindex === undefined && bindex === undefined){\n            break;\n        }else if(sindex === undefined && bindex !== undefined){\n            yield [bindex+range.start.character, Token.Bracket];\n            bindex = clean(brackets.exec(text));\n        }else if(sindex !== undefined && bindex === undefined){\n            yield [sindex+range.start.character, Token.Separator];\n            sindex = clean(separator.exec(text));\n        }else if(sindex !== undefined && bindex !== undefined){\n            if(sindex > bindex){\n                yield [bindex+range.start.character, Token.Bracket];\n                bindex = clean(brackets.exec(text));\n            } else{\n                yield [sindex+range.start.character, Token.Separator];\n                sindex = clean(separator.exec(text));\n            }\n        }\n    }\n    return;\n}\n\nfunction rangeFrom(document: vscode.TextDocument, pos: vscode.Position){\n    let end = document.lineAt(pos).range.end;\n    return new vscode.Range(pos,end);\n}\n\nfunction rangeTo(document: vscode.TextDocument, pos: vscode.Position){\n    return new vscode.Range(new vscode.Position(pos.line,0),pos);\n}\n\nasync function posToArgBoundary(editor: vscode.TextEditor, value: number,\n    start: vscode.Position, boundary: Boundary) {\n\n    // find range of brackets\n    editor.selection = new vscode.Selection(start,start);\n\n    // pos: tracks the current search position\n    let pos = new vscode.Position(start.line,start.character);\n    // range: determined the bounds of the search\n    let range = await findSurroundingBracketRange(editor,pos);\n\n    let doc = editor.document;\n\n    let dir = value > 0 ? Direction.Forward : Direction.Backward;\n    // count: tracks how many function arguments we've passed by\n    let count = 0;\n    // goal: the goal value for count\n    let goal = Math.abs(value);\n    // startLine: line we started searching\n    let startLine = pos.line-1;\n\n    // keep going until we reach our goal or there are no more lines to search\n    while(count < goal){\n\n        // get current line\n        let line;\n        if(startLine === pos.line){\n            // update position to new line, if needed\n            if(dir === Direction.Forward){\n                pos = new Position(pos.line+1,0);\n            }else{\n                pos = new Position(pos.line-1,\n                        doc.lineAt(pos.translate(-1,0)).range.end.character);\n            }\n        }\n        else{\n            startLine = pos.line;\n        }\n\n        // use the position to find the line range we want\n        if(dir === Direction.Forward){\n            line = range.intersection(rangeFrom(doc, pos));\n        }else{\n            line = range.intersection(rangeTo(doc, pos));\n        }\n        // if the new line is outside the range we're searching in\n        // we're done\n        if(line === undefined){ break; }\n\n        // go through the tokens, counting separators\n        let tokens = separatorsAndBrackets(doc, line, dir);\n\n        for(let [index, token] of tokens){\n            // if we've moved to a new line, stop getting tokens on this line\n            if(pos.line !== startLine || count === goal){ break; }\n            // if this token occurs after the search start...\n            if(dir === Direction.Forward ?\n               pos.character <= index : pos.character >= index){\n                if(token === Token.Separator){\n                    // if we found a new separator, move to it\n                    // and increment the count\n                    pos = new Position(pos.line,index);\n                    count++;\n                }else if(token === Token.Bracket){\n                    // if it's a bracket, move to the closing bracket\n                    pos = await findMatchingBracket(editor,\n                            new Position(pos.line,index));\n                }\n            }\n        }\n    }\n    if(count < goal){\n        if(dir === Direction.Forward){\n            pos = range.end;\n        }else{\n            pos = range.start;\n        }\n    }else if(count === goal){\n        // default motions move to end of argument,\n        // move past separator and space, if that's where we landed\n        // (we special case the end and start of the argument range)\n        if(boundary === Boundary.Start){\n            if((dir === Direction.Forward && !pos.isEqual(range.end)) ||\n               (dir === Direction.Backward && !pos.isEqual(range.start))){\n                // move past the separator and spaces\n                let word = doc.getWordRangeAtPosition(pos.translate(0,1),/\\s+/);\n                if(word !== undefined){\n                    pos = word.end;\n                }else if(pos.line < range.end.line){\n                    pos = new Position(pos.line + 1,\n                        doc.lineAt(pos.translate(1,0)).firstNonWhitespaceCharacterIndex);\n                }else{\n                    pos = pos.translate(0,1);\n                }\n            }\n        }\n    }\n    return pos;\n}\n\nenum Boundary{\n    Start,\n    End,\n    Both,\n}\n\nasync function moveByArgument(editor: vscode.TextEditor, args: MoveByArgs){\n    // copy current selections\n    let value = args.value === undefined ? 1 : args.value;\n    let starts = editor.selections.map(sel =>\n        new vscode.Selection(sel.anchor,sel.active));\n    let boundary = args.boundary === undefined ?\n        (args.selectWhole ? Boundary.Both : Boundary.Start) :\n        args.boundary === 'end' ? Boundary.End :\n        args.boundary === 'both' ? Boundary.Both :\n        Boundary.Start;\n    if(!args.selectWhole){\n        let results: vscode.Position[] = [];\n        if(boundary === Boundary.Both){\n            vscode.window.showErrorMessage(\"Boundary value of 'both' is \"+\n                \"unsupported when 'selectWhole' is false.\");\n        }else{\n            for(let i=0;i<starts.length;i++){\n                results[i] =\n                    await posToArgBoundary(editor,value,starts[i].active, boundary);\n                // expand motion goal if we didn't move at all\n                if(results[i].isEqual(starts[i].active)){\n                    value += Math.sign(value);\n                    results[i] =\n                        await posToArgBoundary(editor,value,starts[i].active, boundary);\n                }\n            }\n            if(args.select){\n                editor.selections = starts.map((sel,i) =>\n                    new vscode.Selection(sel.anchor,results[i])\n                );\n            }else{\n                editor.selections = results.map(x => new vscode.Selection(x,x));\n            }\n        }\n    }else{\n        let newSels: vscode.Selection[] = [];\n        let startBoundary = boundary !== Boundary.Both ? boundary :\n            value > 0 ? Boundary.Start : Boundary.End;\n        let stopBoundary = boundary !== Boundary.Both ? boundary :\n            value > 0 ? Boundary.End : Boundary.Start;\n\n        for(let i=0;i<starts.length;i++){\n            let stop = await posToArgBoundary(editor,value,starts[i].active,\n                stopBoundary);\n            let start = await posToArgBoundary(editor,-Math.sign(value),\n                stop, startBoundary);\n            if(start.isEqual(stop)){\n                start = await posToArgBoundary(editor,-2*Math.sign(value),\n                    stop, startBoundary);\n            }\n\n            let pos = new vscode.Selection(start,stop);\n            if(pos.isEqual(starts[i])){\n                stop = await posToArgBoundary(editor,value+Math.sign(value),\n                    starts[i].active, stopBoundary);\n                start = await posToArgBoundary(editor,-Math.sign(value),\n                    stop, startBoundary);\n                if(start.isEqual(stop)){\n                    start = await posToArgBoundary(editor,-2*Math.sign(value),\n                        stop, startBoundary);\n                }\n            }\n            newSels[i] = new vscode.Selection(start,stop);\n        }\n        editor.selections = newSels;\n    }\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension.ts\");\n",""],"names":[],"sourceRoot":""}